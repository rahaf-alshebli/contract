{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\bor - Copy\\\\React-CRUD-operations-using-PHP-API-and-MySQLi-main\\\\react-crud\\\\src\\\\page\\\\Insert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Insert = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [userInfo, setuserInfo] = useState({\n    name: '',\n    email: '',\n    mobile: ''\n  });\n\n  const onChangeValue = e => {\n    setuserInfo({ ...userInfo,\n      [e.target.name]: e.target.value\n    });\n  }; // Inserting a new user into the Database.\n\n\n  const submitUser = async event => {\n    try {\n      event.preventDefault();\n      event.persist();\n      axios.post(`http://localhost/bor/React-CRUD-operations-using-PHP-API-and-MySQLi-main/apicrud/addusers.php`, {\n        username: userInfo.name,\n        useremail: userInfo.email,\n        usermobile: userInfo.mobile\n      }).then(res => {\n        console.log(res.data);\n        navigate(`/`);\n        return;\n      });\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"insertForm\",\n    onSubmit: submitUser,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Add Form \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"_name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"_name\",\n      name: \"name\",\n      onChange: onChangeValue,\n      placeholder: \"Enter name\",\n      autoComplete: \"off\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"_email\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"_email\",\n      name: \"email\",\n      onChange: onChangeValue,\n      placeholder: \"Enter email\",\n      autoComplete: \"off\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"_mobile\",\n      children: \"Phone Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"_mobile\",\n      name: \"mobile\",\n      onChange: onChangeValue,\n      placeholder: \"Enter phone number\",\n      autoComplete: \"off\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Insert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Insert, \"vv9nNJWnQsNkYxX55m85lDu3xXQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Insert;\nexport default Insert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"sources":["C:/xampp/htdocs/bor - Copy/React-CRUD-operations-using-PHP-API-and-MySQLi-main/react-crud/src/page/Insert.js"],"names":["React","useState","axios","useNavigate","Insert","navigate","userInfo","setuserInfo","name","email","mobile","onChangeValue","e","target","value","submitUser","event","preventDefault","persist","post","username","useremail","usermobile","then","res","console","log","data","error"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Insert = () => {\r\n  const navigate = useNavigate();\r\n  const [userInfo, setuserInfo] = useState({\r\n    name: '',\r\n    email: '',\r\n    mobile: '',\r\n\r\n  });\r\n  const onChangeValue = (e) => {\r\n    setuserInfo({\r\n      ...userInfo,\r\n      [e.target.name]:e.target.value\r\n    });\r\n  } \r\n  // Inserting a new user into the Database.\r\n  const submitUser = async(event) => {\r\n    try {\r\n      event.preventDefault();\r\n      event.persist();\r\n     \r\n      axios.post(`http://localhost/bor/React-CRUD-operations-using-PHP-API-and-MySQLi-main/apicrud/addusers.php`, { \r\n        username: userInfo.name,\r\n        useremail: userInfo.email,\r\n        usermobile: userInfo.mobile,\r\n\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        navigate(`/`);\r\n        return;\r\n       })\r\n    } catch (error) { throw error;}    \r\n  };\r\n\r\nreturn (\r\n  <form className=\"insertForm\" onSubmit={submitUser}>\r\n    <h2> Add Form </h2>\r\n    <label htmlFor=\"_name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      id=\"_name\"\r\n      name=\"name\"\r\n      onChange={onChangeValue}\r\n      placeholder=\"Enter name\"\r\n      autoComplete=\"off\"\r\n      required\r\n    />\r\n    <br /> <br />\r\n    <label htmlFor=\"_email\">Email</label>\r\n    <input\r\n      type=\"email\"\r\n      id=\"_email\"\r\n      name=\"email\"\r\n      onChange={onChangeValue}\r\n      placeholder=\"Enter email\"\r\n      autoComplete=\"off\"\r\n      required\r\n    />\r\n    <br /> <br />\r\n    <label htmlFor=\"_mobile\">Phone Number</label>\r\n    <input\r\n      type=\"number\"\r\n      id=\"_mobile\"\r\n      name=\"mobile\"\r\n      onChange={onChangeValue}\r\n      placeholder=\"Enter phone number\"\r\n      autoComplete=\"off\"\r\n      required\r\n    />\r\n    <br /> <br />\r\n    <input type=\"submit\" value=\"Insert\" />\r\n  </form>\r\n);\r\n};\r\n\r\nexport default Insert;"]},"metadata":{},"sourceType":"module"}